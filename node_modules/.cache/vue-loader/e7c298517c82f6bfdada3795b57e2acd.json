{"remainingRequest":"/Users/luzheng/Desktop/react+ts电商平台/vueDataV/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/luzheng/Desktop/react+ts电商平台/vueDataV/src/views/equipment/dd.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/luzheng/Desktop/react+ts电商平台/vueDataV/src/views/equipment/dd.vue","mtime":1614744508747},{"path":"/Users/luzheng/Desktop/react+ts电商平台/vueDataV/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luzheng/Desktop/react+ts电商平台/vueDataV/node_modules/_vue-loader@15.9.6@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/luzheng/Desktop/react+ts电商平台/vueDataV/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/luzheng/Desktop/react+ts电商平台/vueDataV/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luzheng/Desktop/react+ts电商平台/vueDataV/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi53cmFwIHsKICBwb3NpdGlvbjogZml4ZWQ7CiAgdG9wOiAwOwogIGJvdHRvbTogMDsKICBsZWZ0OiAwOwogIHJpZ2h0OiAwOwogIHotaW5kZXg6IDEwMDsKfQoKI2NvbnRhaW5lciB7CiAgaGVpZ2h0OiAxMDAlOwp9Ci5sYWJlbCB7CiAgbWFyZ2luLXRvcDogLTIwcHg7CiAgY29sb3I6ICNmZmY7CiAgZm9udC1zaXplOiAxMnB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNkYmVjYTQ7CiAgcGFkZGluZzogM3B4IDVweDsKICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuNik7CiAgbWluLXdpZHRoOiA4MHB4Owp9Ci5wcmVzc3VyZSB7CiAgd2lkdGg6IDExNXB4Owp9Ci50ZXh0X051bSB7CiAgY29sb3I6IHJlZDsKICBtYXJnaW4tcmlnaHQ6IDVweDsKfQo="},{"version":3,"sources":["dd.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dd.vue","sourceRoot":"src/views/equipment","sourcesContent":["<template>\n  <div class=\"wrap\">\n    <div ref=\"container\" id=\"container\"></div>\n  </div>\n</template>\n<script>\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls.js\";\nimport { CSS3DRenderer,CSS3DObject } from \"three/examples/jsm/renderers/CSS3DRenderer.js\";\nexport default {\n  name: \"ThreeTest\",\n  data() {\n    return {\n    \n    };\n  },\n  mounted() {\n    this.getData()\n\n    this.timer=null\n    this.myReq=null\n    this.container\n    this.scene\n    this.camera\n    this.renderer\n    this.labelRenderer\n    this.controls\n\n    this.initScene();\n    this.initCamera();\n    this.initRender();\n    this.initModel();\n    this.initControls();\n    this.animate();\n    \n    window.onresize = this.onWindowResize;\n  },\n  methods: {\n    getData(){\n        // 循环获取数据\n        clearTimeout(this.timer)\n        var element =document.getElementById(\"enter_text_Num\");\n        if(element){\n           element.innerHTML = Math.round(Math.random()*(70-60) + 60);\n        }\n        this.timer = setTimeout(this.getData, 2000);\n    },\n    initScene() {\n      this.scene = new THREE.Scene();\n    },\n    initCamera() {\n      this.container = document.getElementById(\"container\");\n      this.camera = new THREE.PerspectiveCamera(\n        70,\n        this.container.clientWidth / this.container.clientHeight,\n        1,\n        1000\n      );\n      console.log(this.camera)\n      this.camera.position.z = 1; //z设置小写会使图像变形小\n    },\n    initRender: function() {\n      this.renderer = new THREE.WebGLRenderer({ antialias: true });\n      this.renderer.setSize(this.container.clientWidth, this.container.clientHeight);\n      this.container.appendChild(this.renderer.domElement);\n\n      this.labelRenderer = new CSS3DRenderer();\n      this.labelRenderer.setSize(this.container.clientWidth, this.container.clientHeight);\n      this.labelRenderer.domElement.style.position = \"absolute\";\n      this.labelRenderer.domElement.style.top = 0;\n      this.container.appendChild(this.labelRenderer.domElement);\n      console.log(this.labelRenderer);\n    },\n\n\n    initLight() {\n      this.scene.add(new THREE.AmbientLight(0xffffff));\n      this.light = new THREE.DirectionalLight(0xffffff);\n      //light.position.set(1,1,1);\n      this.light.position.set(0, 0, 50);\n      this.scene.add(this.light);\n    },\n    initModel() {\n      var texture1 = new THREE.TextureLoader().load(\"/static/ww.png\");\n       console.log(texture1)\n      var texture2 = new THREE.TextureLoader().load(\"/static/ww.png\");\n      var texture3 = new THREE.TextureLoader().load(\"/static/ww.png\");\n      var texture4 = new THREE.TextureLoader().load(\"/static/ww.png\");\n      var texture5 = new THREE.TextureLoader().load(\"/static/ww.png\"); //前面与后面的图片反着放\n      var texture6 = new THREE.TextureLoader().load(\"/static/ww.png\");\n\n      var materialArr = [\n        //纹理对象赋值给6个材质对象\n        new THREE.MeshBasicMaterial({ map: texture1 }),\n        new THREE.MeshBasicMaterial({ map: texture2 }),\n        new THREE.MeshBasicMaterial({ map: texture3 }),\n        new THREE.MeshBasicMaterial({ map: texture4 }),\n        new THREE.MeshBasicMaterial({ map: texture5 }),\n        new THREE.MeshBasicMaterial({ map: texture6 })\n      ];\n      var boxGeometry = new THREE.BoxGeometry(200, 200, 200, 100, 100, 100);\n      boxGeometry.scale(1, 1, -1);\n      let cube = new THREE.Mesh(boxGeometry, materialArr);\n      //console.log(this.cube);\n      this.scene.add(cube);\n \n      //获取随机数\n       function getRandomNum(elementId,max,min){\n          var element =document.getElementById(elementId);\n         \telement.innerHTML = Math.round(Math.random()*(max-min) + min);\n       }\n       // 进口压力：\n       var enterPressure = 0;\n       var enterPressureDiv = document.createElement(\"div\");\n       enterPressureDiv.className =\"label\";\n       enterPressureDiv.innerHTML = \"<div class='pressure'>进口压力：<span class='text_Num' id='enter_text_Num'>\"+enterPressure+\"</span> kpa</div>\"\n       let enterPressureLabel = new CSS3DObject(enterPressureDiv);\n       enterPressureLabel.position.set(-150,-50,-380);\n       this.scene.add(enterPressureLabel);\n\n       // 出口压力：\n       var outPressure = 60;\n       var outPressureDiv = document.createElement(\"div\");\n       outPressureDiv.className =\"label\";\n       outPressureDiv.innerHTML = \"<div class='pressure'>出口压力：<span class='text_Num' id='out_text_Num'>\"+outPressure+\"</span> kpa</div>\"\n       let outPressureLabel = new CSS3DObject(outPressureDiv);\n       outPressureLabel.position.set(160,-20,-380);\n       this.scene.add(outPressureLabel);\n\n      // 泄漏\n       var leak = 2;\n       var leakDiv = document.createElement(\"div\");\n       leakDiv.className =\"label\";\n       leakDiv.innerHTML = \"<div>泄漏：<span class='text_Num' id='out_text_Num'>\"+leak+\"</span> %</div>\"\n       let leakLabel = new CSS3DObject(leakDiv);\n       leakLabel.position.set(0,280,-380);\n       this.scene.add(leakLabel);\n\n       // 累计体积\n       var leak = 5000;\n       var leakDiv = document.createElement(\"div\");\n       leakDiv.className =\"label\";\n       leakDiv.innerHTML = \"<div>累计体积：<span class='text_Num'>5000</span> m³</div>\"\n       let leijitiji = new CSS3DObject(leakDiv);\n       leijitiji.position.set(210,160,-380);\n       this.scene.add(leijitiji);\n\n       // 瞬时流量\n       var flow = 80;\n       var flowDiv = document.createElement(\"div\");\n       flowDiv.className =\"label\";\n       flowDiv.innerHTML = \"<div class='pressure'>瞬时流量：<span class='text_Num' id='flow_text_Num'>\"+flow+\"</span> m³/h</div>\"\n       let flowLabel = new CSS3DObject(flowDiv);\n       flowLabel.position.set(30,50,-380);\n       this.scene.add(flowLabel);\n\n       // 获取数据\n      //   this.timer = setTimeout(()=>{\n      //    var element =document.getElementById(\"enter_text_Num\");\n      //    \telement.innerHTML = Math.round(Math.random()*(70-60) + 60);\n      //  },1000)\n\n    },\n    initControls() {\n      //controls = new THREE.OrbitControls( camera, renderer.domElement );\n      this.controls = new OrbitControls(this.camera, this.labelRenderer.domElement);\n\n      // 如果使用animate方法时，将此函数删除\n\n      //controls.addEventListener( 'change', render );\n\n      // 使动画循环使用时阻尼或自转 意思是否有惯性\n\n      this.controls.enableDamping = false;\n\n      //动态阻尼系数 就是鼠标拖拽旋转灵敏度\n\n      //controls.dampingFactor = 0.25;\n\n      //是否可以缩放\n\n      this.controls.enableZoom = false;\n\n      //是否自动旋转\n\n      this.controls.autoRotate = false;\n\n      //设置相机距离原点的最远距离\n\n      this.controls.minDistance = 1;\n\n      //设置相机距离原点的最远距离\n\n      this.controls.maxDistance = 10;\n\n      //是否开启右键拖拽\n\n      this.controls.enablePan = false;\n    },\n    render() {\n      this.renderer.render(this.scene, this.camera);\n      this.labelRenderer.render(this.scene, this.camera);\n    },\n    onWindowResize() {\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n\n      this.camera.updateProjectionMatrix();\n\n      this.render();\n\n      this.renderer.setSize(window.innerWidth, window.innerHeight);\n      this.labelRenderer.setSize(window.innerWidth, window.innerHeight);\n    },\n    animate() {\n      this.render();\n      this.myReq = requestAnimationFrame(this.animate);\n    }\n  },\n  beforeDestroy() {\n    cancelAnimationFrame(this.myReq)\n    clearInterval(this.timer);\n    this.scene = null\n    // this.scene.dispose()\n    this.camera = null\n    this.renderer = null\n    this.labelRenderer =null\n    this.controls = null\n    \n  }\n};\n</script>\n<style>\n.wrap {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n}\n\n#container {\n  height: 100%;\n}\n.label {\n  margin-top: -20px;\n  color: #fff;\n  font-size: 12px;\n  border: 1px solid #dbeca4;\n  padding: 3px 5px;\n  background: rgba(0, 0, 0, 0.6);\n  min-width: 80px;\n}\n.pressure {\n  width: 115px;\n}\n.text_Num {\n  color: red;\n  margin-right: 5px;\n}\n</style>"]}]}